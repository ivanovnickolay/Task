<?php

namespace Home\TaskBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * TaskRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TaskRepository extends EntityRepository
{
    public function getTaskByCategory($id_cat= null)
    {
        // получение задач по выбранной категории $Category_id
        $Query=$this->createQueryBuilder('t');
        if ($id_cat)
        {
            $Query->where('t.Category=:cat');
            $Query->setParameter('cat',$id_cat);
        }
        $result=$Query->getQuery();
        return $result->getResult();
    }

public function getHotTaskBegin()
{
    $Dat=date("yyyy-mm-dd");
    $Query=$this->createQueryBuilder('T');
    $Query->where('T.begin_task>:Dt');
    $Query->setParameter('Dt',$Dat);
    $Res=$Query->getQuery()->getResult();
    return $Res;
}

    public function getAllActualTask()
    {
       //$Query=$this->createQueryBuilder('T');
       //$Query->where('T.final<>1');
        // todo настроить вычисление количество дней прострочки выполнения задачи
     // $Res=$this->getEntityManager()->createQuery('SELECT T.id, T.name_task, T.begin_task, T.end_task, C.Category, DATE_DIFF(T.end_task, :d) AS prostr FROM HomeTaskBundle:Task as T, HomeTaskBundle:Category as C WHERE  (T.final <>1) and (T.category=C.id) ');
       $Res=$this->getEntityManager()->createQuery('SELECT t0.id AS id, t0.name_task AS name_task,t0.begin_task AS begin_task,t0.end_task AS end_task,t0.description AS description,t0.vajnoct AS vajnoct,t0.final AS final FROM HomeTaskBundle:Task t0');


           //$Res->setParameter('d',$Dat);
            $Result=$Res->getResult();
       return $Result;
    }
}