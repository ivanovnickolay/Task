> E:\OpenServer\modules\php\PHP-5.4\php.exe E:\OpenServer\domains\localhost\Task\app\console doctrine:generate:entities Home/TaskBundle/
Generating entities for namespace "Home\TaskBundle</info>"
  > backing up Task.php to Task.php~
  > generating Home\TaskBundle\Entity\Task

Process finished with exit code 0 at 17:59:08.
Execution time: 2 079 ms.

> E:\OpenServer\modules\php\PHP-5.4\php.exe E:\OpenServer\domains\localhost\Task\app\console doctrine:generate:entities Home/TaskBundle/
Generating entities for namespace "Home\TaskBundle</info>"
  > backing up Task.php to Task.php~
  > generating Home\TaskBundle\Entity\Task

Process finished with exit code 0 at 18:01:08.
Execution time: 1 969 ms.

> E:\OpenServer\modules\php\PHP-5.4\php.exe E:\OpenServer\domains\localhost\Task\app\console doctrine:generate:entities Home/TaskBundle/
Generating entities for namespace "Home\TaskBundle</info>"
  > backing up Task.php to Task.php~
  > generating Home\TaskBundle\Entity\Task
----------------------------------------------------------------------------------------
> E:\OpenServer\modules\php\PHP-5.4\php.exe E:\OpenServer\domains\localhost\Task\app\console doctrine:schema:update --force
Updating database schema...
Database schema updated successfully! "1" queries were executed
-------------------------------------------------------------------------------
> E:\OpenServer\modules\php\PHP-5.4\php.exe E:\OpenServer\domains\localhost\Task\app\console doctrine:generate:crud --entity=HomeTaskBundle:Task --route-prefix=task --with-write --format=yml

                                           
  Welcome to the Doctrine2 CRUD generator  
                                           


This command helps you generate CRUD controllers and templates.

First, you need to give the entity for which you want to generate a CRUD.
You can give an entity that does not exist yet and the wizard will help
you defining it.

You must use the shortcut notation like AcmeBlogBundle:Post.

The Entity shortcut name [HomeTaskBundle:Task]: 

By default, the generator creates two actions: list and show.
You can also ask it to generate "write" actions: new, update, and delete.

Do you want to generate the "write" actions [yes]? 

Determine the format to use for the generated CRUD.

Configuration format (yml, xml, php, or annotation) [yml]: 

Determine the routes prefix (all the routes will be "mounted" under this
prefix: /prefix/, /prefix/new, ...).

Routes prefix [/task]: 

                             
  Summary before generation  
                             

You are going to generate a CRUD controller for "HomeTaskBundle:Task"
using the "yml" format.

Do you confirm generation [yes]? 

                   
  CRUD generation  
                   

Generating the CRUD code: OK
Generating the Form code: OK
Confirm automatic update of the Routing [yes]? 
Importing the CRUD routes: OK

                                               
  You can now start using the generated code!  
                                               


Process finished with exit code 0 at 19:45:20.
Execution time: 16 016 ms.